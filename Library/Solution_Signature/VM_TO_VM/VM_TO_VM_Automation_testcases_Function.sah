function CreateManagementService_002() {
	try {
		CreateManagementService($locationPR,$msType,$vcentreNamePR,$mserviceipPR,$ManagementserviceUNPR,$ManagementservicePWDPR); //Vcentre PR, AWS DR
		CreateManagementService($locationDR,$msType,$vcentreNameDR,$mserviceipDR,$ManagementserviceUNDR,$ManagementservicePWDDR);
		} catch ($e) { 
 		_log($e.toString(),"Custom1");
		_log("for test Case ID:CreateManagementService_002(),Function: login ,execution got failed.kindly check the log for more details");
		_fail("Create Management Service failed.So that stopping execution.");
	}
}

function APP_PFR_Component_Remote_Discovery_0018() {
	try {
		Create_Remote_ComponentPR();
		Create_Remote_ComponentDR();
	} catch ($e) {
		_log($e.toString(),"Custom1");
		_log("for test Case ID:Component_Remote_Discovery_0018(),Function: Create_Remote_ComponentPR or Create_Remote_ComponentDR ,execution got failed.kindly check the log for more details");
		_fail("component not created succesfully.So that stopping execution.");
	}
}

function APP_PFR_Component_Remote_Discovery_0018_EX() {
	try {
	Create_Remote_Component_Dummy_CR($system_TypeLinux,$dummyComponentNameCR,$dummyComponentIPCR,$locationCR);
	} catch ($e) {
		_log($e.toString(),"Custom1");
		_log("for test Case ID:APP_PFR_Component_Remote_Discovery_0018_EX(),Function: Create_Remote_ComponentPR or Create_Remote_ComponentDR ,execution got failed.kindly check the log for more details");
		_fail("component not created succesfully.So that stopping execution.");
	}
}

function ApplicationDiscovery_VM() {
	try {
		ApplicationDiscovery($locationPR,$appStackName,$vcentreNamePR,$mserviceipPR,$vmIP,$tierNum,$VMsNum);
		} catch ($e) { 
 		_log($e.toString(),"Custom1");
		_log("for test Case ID:ApplicationDiscovery_VM(),Function: login ,execution got failed.kindly check the log for more details");
		_fail("ApplicationDiscoveryOnAWS failed.So that stopping execution.");
	}
}

function ApplicationDiscovery_VM_Extended_DR() {
	try {
		ApplicationDiscovery($locationPR,$appStackName1,$vcentreNamePR,$mserviceipPR,$vmIP1,$tierNum,$VMsNum);
		} catch ($e) { 
 		_log($e.toString(),"Custom1");
		_log("for test Case ID:ApplicationDiscovery_VM(),Function: login ,execution got failed.kindly check the log for more details");
		_fail("ApplicationDiscoveryOnAWS failed.So that stopping execution.");
	}
}


function Create_Netapp_Protection_Schema() {
	try {
		Create_NetApp_Snapmirror_Protectionscheme($volumeNamePR,$compNamePR,$sernamePR);
		Create_NetApp_Snapmirror_Protectionscheme($volumeNameDR,$compNameDR,$sernameDR);
		} catch ($e) { 
 		_log($e.toString(),"Custom1");
		_log("for test Case ID:Create_Netapp_Protection_Schema(),Function: login ,execution got failed.kindly check the log for more details");
		_fail("Create_Netapp_Protection_Schema failed.So that stopping execution.");
	}
}

function Create_Netapp_Protection_Schema_EX() {
	try {
		var $ComponentNamePR=getComponentNamePR($vmIP1);
		Create_Oracle_ProtectionScheme_Dummy_CR($ProtectionType,$ProtectionType+"_"+$ComponentNamePR,$ComponentNamePR)
		Create_Oracle_ProtectionScheme_Dummy_CR($ProtectionType,$ProtectionType+"_"+$dummyComponentNameCR,$dummyComponentNameCR);
	} catch ($e) { 
 		_log($e.toString(),"Custom1");
		_log("for test Case ID:Create_Netapp_Protection_Schema(),Function: login ,execution got failed.kindly check the log for more details");
		_fail("Create_Netapp_Protection_Schema failed.So that stopping execution.");
	}
}

function create_AG_Extended_DR() {
	try {
		var $ComponentNamePR=getComponentNamePR($vmIP1);
		Navigate_to_Appstack($appStackName1); 
		create_AG_With_Extended_DR($AGgroupName1,$locationCR,$ProtectionType+"_"+$dummyComponentNameCR,$ProtectionType+"_"+$ComponentNamePR,$drIP_Ex_DR);
		} catch ($e) { 
 		_log($e.toString(),"Custom1");
		_log("for test Case ID:ApplicationDiscovery_VM(),Function: login ,execution got failed.kindly check the log for more details");
		_fail("ApplicationDiscoveryOnAWS failed.So that stopping execution.");
	}
}


function Create_Site_CR() {
	try {
		Create_site($locationCR, $incharge, $addressCR);
		} catch ($e) { 
 		_log($e.toString(),"Custom1");
		_log("for test Case ID:ApplicationDiscovery_VM(),Function: login ,execution got failed.kindly check the log for more details");
		_fail("ApplicationDiscoveryOnAWS failed.So that stopping execution.");
	}
}

function UpdateComponentTestCred_0012() {
	try {
		if($withExtendedDR=="no") {
		UpdateComponentTestCredPR($vmIP,$vmUsername,$vmPswd);
		}
		else
			{
		UpdateComponentTestCredPR($vmIP1,$vmUsername1,$vmPswd1);
			}
		//UpdateComponentTestCredDR($vmUsername1,$vmPswd1);  // DR not required
		} catch ($e) { 
 		_log($e.toString(),"Custom1");
		_log("for test Case ID:UpdateComponentTestCred_0012(),Function: login ,execution got failed.kindly check the log for more details");
		_fail("UpdateComponentTestCred failed.So that stopping execution.");
	}
}


function Start_Provisioning_VM() {
	try {
		if($withExtendedDR=="no") {
			VM_TO_VM_Start_Ral_Execution($appStackName,"Provisioning");
		}
		else
			{
			VM_TO_VM_Start_Ral_Execution($appStackName1,"Provisioning");
			}
	}catch ($e) { 
 		_log($e.toString(),"Custom1");
		_log("for test Case ID:VM_TO_VM_Exec_Provisioning(),Function: login ,execution got failed.kindly check the log for more details");
		_fail("ApplicationDiscoveryOnAWS failed.So that stopping execution.");
	}
}


function Verify_Provisioning_Execution_Status() {
	try {
		if($withExtendedDR=="no"){
			Verify_Ral_Execution_Status($appStackName,"Provisioning");
	}
	else
		{
		Verify_Ral_Execution_Status($appStackName1,"Provisioning");
		}
	}catch ($e) { 
 		_log($e.toString(),"Custom1");
		_log("for test Case ID:Verify_Provisioning_Execution_Status(),Function: login ,execution got failed.kindly check the log for more details");
		_fail("ApplicationDiscoveryOnAWS failed.So that stopping execution.");
	}
}

function Import_Fote_Workflows() {
	try {
		if($withExtendedDR=="no"){
			Importing_Fote_Workflows($appStackName);
	}
	else
		{
		Importing_Fote_Workflows($appStackName1);
		}
	}catch ($e) { 
 		_log($e.toString(),"Custom1");
		_log("for test Case ID:Import_Fote_Workflows(),Function: login ,execution got failed.kindly check the log for more details");
		_fail("ApplicationDiscoveryOnAWS failed.So that stopping execution.");
	}
}

function Start_Fote_Workflow() {
	try {
		if($withExtendedDR=="no"){
			VM_TO_VM_Start_Ral_Execution($appStackName,"FailoverTestExercise");
	}
	else
		{
		VM_TO_VM_Start_Ral_Execution($appStackName1,"FailoverTestExercise");
		}
	}catch ($e) { 
 		_log($e.toString(),"Custom1");
		_log("for test Case ID:Start_Fote_Workflow(),Function: login ,execution got failed.kindly check the log for more details");
		_fail("ApplicationDiscoveryOnAWS failed.So that stopping execution.");
	}
}

function Verify_FOTE_Execution_Status() {
	try {
		if($withExtendedDR=="no"){
			Verify_Ral_Execution_Status($appStackName,"FailoverTestExercise");
	}
	else
		{
		Verify_Ral_Execution_Status($appStackName1,"FailoverTestExercise");
		}
	}catch ($e) { 
 		_log($e.toString(),"Custom1");
		_log("for test Case ID:Verify_FOTE_Execution_Status(),Function: login ,execution got failed.kindly check the log for more details");
		_fail("ApplicationDiscoveryOnAWS failed.So that stopping execution.");
	}
}

function Start_FO_Execution() {
	try {
		if($withExtendedDR=="no"){
			VM_TO_VM_Start_Ral_Execution($appStackName,"Failover");
	}
	else
		{
		VM_TO_VM_Start_Ral_Execution($appStackName1,"Failover");
		}
	}catch ($e) { 
 		_log($e.toString(),"Custom1");
		_log("for test Case ID:Start_FO_Execution(),Function: login ,execution got failed.kindly check the log for more details");
		_fail("ApplicationDiscoveryOnAWS failed.So that stopping execution.");
	}
}

function Verify_FO_Execution_Status() {
	try {
		if($withExtendedDR=="no"){
			Verify_Ral_Execution_Status($appStackName,"Failover");
	}
	else
		{
		Verify_Ral_Execution_Status($appStackName1,"Failover");
		}
	}catch ($e) { 
 		_log($e.toString(),"Custom1");
		_log("for test Case ID:Verify_FO_Execution_Status(),Function: login ,execution got failed.kindly check the log for more details");
		_fail("ApplicationDiscoveryOnAWS failed.So that stopping execution.");
	}
}